/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}
test {
    useJUnitPlatform()
}
test.onlyIf { !project.hasProperty('test') }


dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.4.1'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '2.4.1'
    compile group: 'redis.clients', name: 'jedis', version: '3.4.0'
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '2.4.1'
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.200'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.4.1'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.4.1'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.19'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.0'


    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'
}


task ubarJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'software.spring.caching.CabApplication'
    }
    archiveClassifier = "webapp"
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}